/**
 * 
 */
package com.malinda.data;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;

/**
 * @author malinda
 *
 */
public class DbUtil 
{

	
	private static final String USERNAME="malinda";
	private static final String PASSWORD="malinda123";
	/*private static final String USERNAME="dbuser";
	private static final String PASSWORD="dbpassword";*/
	//private static final String CONNATRING="jdbc:mysql://localhost/BookShop?useUnicode=true&amp;characterEncoding=UTF-8";
	private static final String CONNATRING="jdbc:mysql://localhost/BookShop";
	private static final String CONNATRING1="jdbc:hsqldb:data/BookShop";
	

	
	
	public static Connection getConnection(DbType db) throws SQLException, ClassNotFoundException
	{
		switch (db) 
		{
		case MySQL:
			return DriverManager.getConnection(CONNATRING, USERNAME, PASSWORD);		

		case Access:
			String driver ="sun.jdbc.odbc.JdbcOdbcDriver";
			Class.forName(driver);
			String database="jdbc:odbc:BookShop";
			return DriverManager.getConnection(database);
			
		case HSQL:
			return DriverManager.getConnection(CONNATRING1, USERNAME, PASSWORD);	
		default:
			return null;
		
		}
	} 
	
	public static boolean insertValuesToDB(Node node) throws ClassNotFoundException, SQLException
	{
		String sql="INSERT INTO BOOK (ISBN,TITLE,AUTHORNAME,AUTHORSURNAME)"+
	    "VALUES(?,?,?,?)";
		Connection conn=DbUtil.getConnection(DbType.MySQL);
		java.sql.PreparedStatement stmt=conn.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
		stmt.setLong(1,node.isbn);
		stmt.setString(2, node.title);
		stmt.setString(3,node.authorName);
		stmt.setString(4,node.authorSurname);
		int value=stmt.executeUpdate();
		if (value==0) 
		{
			return false;
		}
		else
		{
			return true;
		}
		
	}
	
	public static boolean DeleteNodeFromDB(Node node) throws ClassNotFoundException, SQLException
	{

		Connection conn=DbUtil.getConnection(DbType.MySQL);
		if (node.title==null) 
		{
			String sql="DELETE FROM BOOK WHERE ISBN=?";
			java.sql.PreparedStatement stmt=conn.prepareStatement(sql);
			stmt.setInt(1, node.isbn);
			if (stmt.executeUpdate()!=0)
			{
				return true;
			}
			else
			{
				return false;
			}
		}
		else
		{
			String sql="DELETE FROM BOOK WHERE TITLE=?";
			java.sql.PreparedStatement stmt=conn.prepareStatement(sql);
			stmt.setString(1, node.title);
			if (stmt.executeUpdate()!=0)
			{
				return true;
			}
			else
			{
				return false;
			}
		}
		
		
		
		

	}
}
